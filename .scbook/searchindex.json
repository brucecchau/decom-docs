[{"title":"Introduction","file":"README.md","slug":"README","text":"The Web3 landscape today is one of ‘User Beware’. Web3 users continue to lose funds by connecting their wallets to fake phishing sites, following instructions from compromised project documents or interacting with fake social media accounts.\nWeb3 users are asked to ‘be careful’ but in most cases, there is little that such users can do. DApps are rarely audited, there is no way to verify that the published source code is actually the same as the code being served from centralized web hosting providers and users also often find out ‘afterwards’ that the document they were following or social media account they were interacting with was compromised or fake.\nThe promises of web3 mass adoption are at risk as the only way to currently avoid the dangers is to avoid participation completely. This is a concern and industry leaders are recognizing that there needs to be a greater emphasis on fulfilling the principles of ‘decentralization’ not in a piecemeal manner but across the full technology stack.\nIt is from this background that Secure Compute emerges. Secure Compute is the first Zero Trust DApp stack protocol that enables DApps, Documents and project social media accounts and domains to be self-validatable by web3 users. DApps, Documents and projects built and registered through Secure Compute’s VALID platform provides transparency, tamper-resistance, phishing prevention and more in a decentralized platform.\nPowered by an ecosystem utility token and guided by a mission to make Web3 a safer environment for all, Secure Compute aims to be the new way of building Web3 DApps and Docs.&#x20;\n"},{"title":"Why Secure Compute?","file":"introduction/why-secure-compute/README.md","slug":"introduction/why-secure-compute/README","text":""},{"title":"The Web3 Potential","file":"introduction/why-secure-compute/the-web3-potential.md","slug":"introduction/why-secure-compute/the-web3-potential","text":"Web3 is a term that is commonly agreed to encompass the next evolution of the internet incorporating concepts such as decentralization and token-based economics. More specifically, it is often envisioned to support the DOVE principles: &#x20;\nFrom a market size perspective, Emergen Research in June 2022, estimated the global Web3 market size at USD 3.2 Billion in 2021 and forecasts the growth at a CAGR of 43.7% reaching USD 81.5 Billion by 2030. (https://www.prnewswire.com/news-releases/global-web-3-0-market-size-to-reach-usd-81-5-billion-in-2030--emergen-research-301559192.html)\nA key caveat that they noted in their research is the need for existing websites to modernize and the concerns over the potential for a significant increase in online abuse and fraud.\n"},{"title":"The Need for Zero Trust","file":"introduction/why-secure-compute/the-need-for-zero-trust.md","slug":"introduction/why-secure-compute/the-need-for-zero-trust","text":"The security concerns raised by the Emergen Research paper are very real. Web3 users are currently faced with a ‘User Beware’ situation and risk losing the funds in their wallet every time they connect their wallets and transact with a current-generation DApp. There are numerous stories of users finding their wallets emptied due to what they thought was a legitimate site and transaction or signature.\nFake sites, fake social media channels and fake project documentation are other areas of risk for web3 users as it is very difficult to determine if a site is authentic or not or whether the site content was compromised.\nIn order for the optimistic web3 projections to come true, projects need to truly live up to the DOVE principles (Decentralization, Ownership, Verifiability, Execution) because the security problems being faced are due to the neglect of these principles.\nCurrent ‘so-called’ web3 DApps have the following architecture:\nAs one can see, most current Web3 DApps simply bolt on a wallet and some integration with blockchain smart contracts, but they still leverage the same centralized web 2.0 infrastructure for everything else, thereby creating the problem. Notably, there is no transparency on how the DApp is hosted, no transparency on what code is being served and no transparency on how the migration process for the DApp was handled. In other words, users need to blindly trust the centralized entities that still play a large role in current web3 DApps.\nTo fully live up to the web3 vision, there is a need for a Zero Trust approach that leverages the DOVE principles and enables the public to ‘validate’ DApps, Documents and social media accounts without the need to ‘Trust’ any centralized authority.\nIn an ideal web3 world, users should be able to self-validate and access the following:\n"},{"title":"A True Web3 Development Tool","file":"introduction/why-secure-compute/a-true-web3-development-tool.md","slug":"introduction/why-secure-compute/a-true-web3-development-tool","text":"Current blockchain projects have a difficult time living up to the full DOVE principles due to a lack of true Web3 DApp development infrastructure. Increasingly there are web3 infrastructure projects emerging that offer decentralized and transparent approaches for accessing blockchains, however, that is typically as far as they go.\nThe DApp Front End and middleware are typically still built using traditional web 2.0 approaches, namely leveraging web 2.0 frameworks like REACT, VUE.JS etc and the resulting DApp is also often hosted on centralized hosting solutions that provide little transparency to end users.\nAnother problem that plagues the DApp development environment is the clinging to the Web2.0 development approach of ‘anything goes’. Existing frameworks like REACT, VUE.JS etc., promote its ability to allow developers to build as they wish using nested libraries of code that lead to unlimited flexibility but come at a cost of being almost impossible to ‘audit’ and ‘endless’ hacking risks from the libraries of unreviewed and unaudited code.\nUnless there is a change in this approach, security risks and adoption risks of web3 will put the anticipated USD 81.5B industry at risk.\n"},{"title":"The Secure Compute Platform","file":"introduction/the-secure-compute-platform/README.md","slug":"introduction/the-secure-compute-platform/README","text":""},{"title":"Overview of Secure Compute","file":"introduction/the-secure-compute-platform/overview-of-secure-compute/README.md","slug":"introduction/the-secure-compute-platform/overview-of-secure-compute/README","text":"Secure Compute is the world’s first Zero Trust DApp Stack and the first to enable Web3 DApps that truly live up to the Web 3 DOVE principles (Decentralization, Ownership, Verifiability, Execution).\nWith Secure Compute, projects are able to tamper-proof their project information, DApps and project documentation and enable web3 users the ability to self-validate the authenticity of DApps, Documents and social media accounts.\n"},{"title":"Benefits for Adopting Secure Compute","file":"introduction/the-secure-compute-platform/overview-of-secure-compute/benefits-for-adopting-secure-compute.md","slug":"introduction/the-secure-compute-platform/overview-of-secure-compute/benefits-for-adopting-secure-compute","text":"Secure Compute is a protocol that is designed to enable blockchain projects to offer more secure, transparent and validatable solutions to their community while themselves benefiting from:\n"},{"title":"Core Components","file":"introduction/the-secure-compute-platform/overview-of-secure-compute/core-components.md","slug":"introduction/the-secure-compute-platform/overview-of-secure-compute/core-components","text":"Secure Compute is a platform that consists of several components.\n"},{"title":"Ecosystem Members","file":"introduction/the-secure-compute-platform/overview-of-secure-compute/ecosystem-members.md","slug":"introduction/the-secure-compute-platform/overview-of-secure-compute/ecosystem-members","text":"Secure Compute is a community-driven ecosystem, called the ‘VALIGLATORS’ that are incentivized through a $VALID utility token and common guiding objective of bringing greater decentralization, transparency, accountability and security to the web3 ecosystem through the following roles:\n"},{"title":"VALID Registry","file":"introduction/the-secure-compute-platform/valid-registry.md","slug":"introduction/the-secure-compute-platform/valid-registry","text":"The VALID Registry is a smart contract and IPFS based record of project information, VALIDApp configuration, Domain configuration and Secure-Compute based accounts/wallets. A decentralized community of VALIDators and Auditors will validate the information providing the web3 community with an accurate ‘authenticated’ registry of blockchain project information.\n"},{"title":"Project General Information","file":"introduction/the-secure-compute-platform/valid-registry/project-general-information.md","slug":"introduction/the-secure-compute-platform/valid-registry/project-general-information","text":"Blockchain projects can be registered on the registry to serve as an authentic record of project information. Following information can be stored.\n"},{"title":"Project Specific Information","file":"introduction/the-secure-compute-platform/valid-registry/project-specific-information.md","slug":"introduction/the-secure-compute-platform/valid-registry/project-specific-information","text":"VALID registries will be deployed to multiple blockchains to allow DApps projects to be registered based on the blockchain they are running on. For DApps that are multi-chain themselves, projects will be required to select the ‘primary’ chain which will serve as the single registration point.\nSecure Compute will run an ‘Indexed’ version of the various registries to enable convenient lookup of information.\n"},{"title":"VALID Portal","file":"introduction/the-secure-compute-platform/valid-portal.md","slug":"introduction/the-secure-compute-platform/valid-portal","text":"The VALID portal enables web3 users to conveniently confirm the authenticity of DApps, Docs and more from a single convenient site.  The portal will also provide instructions to users to further self-validate directly from blockchain explorers for the so-inclined.\nVALIDators also use the portal to validate and sign-off on newly updated project information.\nThe VALID Portal will have the following modules:\n"},{"title":"VALIDapps","file":"introduction/the-secure-compute-platform/validapps.md","slug":"introduction/the-secure-compute-platform/validapps","text":"VALIDapps are DApps built with the Secure Compute development protocol. VALIDapps, to the casual web3 user may look the same as a typical DApp but behind the covers, there are many differences. VALIDapps are Zero Trust DApps that enable its users to confirm its authenticity and have in-built circuit breaker mechanisms to ensure that DApps have not been tampered with.\nVALIDapps offer the following key behind-the-scenes features that are lacking in other DApps:\nVALIDapps retain the versatility of existing DApps, as literally all current features that current DApps offer to end users can be duplicated using the VALIDApp approach.\n"},{"title":"VALIDocs","file":"introduction/the-secure-compute-platform/validocs.md","slug":"introduction/the-secure-compute-platform/validocs","text":"VALIDocs offer the following key behind-the-scenes features that are lacking in other document platforms like Gitbook:\n"},{"title":"VALID Nodes","file":"introduction/the-secure-compute-platform/valid-nodes.md","slug":"introduction/the-secure-compute-platform/valid-nodes","text":"A decentralized network of transparent nodes that serve as DApp serving points and processors.\nVALID Nodes carry out the following tasks\nNodes may be run in the following modes:\n"},{"title":"Components","file":"components/README.md","slug":"components/README","text":""},{"title":"Container","file":"components/container/README.md","slug":"components/container/README","text":"left | right\n"},{"title":"Controls","file":"components/Control/README.md","slug":"components/Control/README","text":"Control is the base class for all components that are visible at run time.  Controls are visual components, meaning the user can see them and possibly interact with them at run time. All controls have properties, methods, and events that describe aspects of their appearance, such as the position of the control, the cursor or hint associated with the control, methods to paint or move the control, and events that respond to user actions.\nControl has many protected properties and methods that are used or published by its descendants.\n"},{"title":"Custom Data Types","file":"components/customDataType/README.md","slug":"components/customDataType/README","text":"none | bottom | center | fill | left | right | top\nstring | number | normal | initial | inherit\ninline-block | block | inline-flex | flex | inline | initial | inherit | none\nmargin | padding\nstatic | relative | absolute | fixed | sticky | inherit | initial\ntop | right | bottom | left\nnone | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset\nself | blank | parent | top\nhorizontal | vertical&#39;;`\nstretch | start | end | center\ntop | right | bottom | left\nnormal | italic | oblique | initial | inherit\nnowrap | wrap | wrap-reverse | initial | inherit\nvisible | hidden | clip | scroll | auto | initial | inherit | unset\ntop | left | right | bottom | topLeft | topRight | bottomLeft | bottomRight | leftTop | leftBottom | rightTop | rightBottom\nhover | click\n"},{"title":"Layout","file":"components/layout/README.md","slug":"components/layout/README","text":"The following components are used to handle the layouts of a page.\n"},{"title":"i-panel","file":"components/layout/Panel/README.md","slug":"components/layout/Panel/README","text":"Use to define panel to display contents.\nInherited from Container\n"},{"title":"i-card-layout","file":"components/layout/CardLayout/README.md","slug":"components/layout/CardLayout/README","text":"It is a layout manager for a container. It treats each component in the container as a card. Only one card is visible at a time, and the container acts as a stack of cards. The first component added to a CardLayout object is the visible component when the container is first displayed.\nInherited from Container\n"},{"title":"i-grid-layout","file":"components/layout/gridLayout/README.md","slug":"components/layout/gridLayout/README","text":"It is a layout manager that lays out a container&#39;s components in a rectangular grid. The container is divided into equal-sized rectangles, and one component is placed in each rectangle.\nInherited from Container\nstretch | start | end | center\nstretch | start | end | center | baseline\nTip: The properties id, width, height, background, grid, font, margin, border are inherited from Control\n"},{"title":"i-stack-layout","file":"components/layout/stackLayout/README.md","slug":"components/layout/stackLayout/README","text":"A Layout that positions child elements in a single line which can be oriented vertically or horizontally.\nInherited from Container\nnowrap | wrap | wrap-reverse | initial | inherit\nhorizontal | vertical\nstart | center | end | space-between\nstretch | start | center | end\n"},{"title":"i-hstack","file":"components/layout/Hstack/README.md","slug":"components/layout/Hstack/README","text":"Used for presenting views that arranges its children in a horizontal line.\nInherited from Container &gt; StackLayout\nstart | center | end | space-between\nstretch | start | center | end\n"},{"title":"i-vstack","file":"components/layout/Vstack/README.md","slug":"components/layout/Vstack/README","text":"Use for presenting views that arranges its children in a vertical line.\nInherited from Container &gt; StackLayout\nstretch | start | center | end\nstart | center | end | space-between\n"},{"title":"Buttons","file":"components/Button/README.md","slug":"components/Button/README","text":"A button means an operation (or a series of operations). Clicking a button will trigger corresponding business logic. The component i-button is used to define a button.\nInherited from Control\nTip: The properties top, left, id and the event onClick are inherited from Control\n"},{"title":"Charts","file":"components/charts/README.md","slug":"components/charts/README","text":"A chart is a graphical representation for data visualization, in which &quot;the data is represented by symbols, such as bars in a bar chart, lines in a line chart, or slices in a pie chart&quot;. A chart is a type of diagram that organizes and represents a set of numerical or qualitative data.   It provides a mean to easily understand large amount of data and the relationships between parts of the data.\nThe following charting components are the most commonly used chart types.\ni-bar-chart is a component to create bar chart that presents categorical data with rectangular bars with heights or lengths proportional to the values that they represent. The bars can be plotted vertically or horizontally.  A bar chart shows comparisons among discrete categories. One axis of the chart shows the specific categories being compared, and the other axis represents a measured value. \ni-bar-stack-chart is a component that creates a stacked bar chart to represent the proportional contribution of individual data points in comparison to a total. The height or length of each bar represents how much each group contributes to the total.\ni-line-chart is a component that\ni-pie-chart is the component to create a pie chart that is a circle divided into areas, or slices. Each slice represents the count or percentage of the observations of a level for the variable. \ni-scatter-chart is a component that create a scatter chart that plots the dots representing values for two different numeric variables. The position of each dot on the horizontal and vertical axis indicates values for an individual data point. Scatter plots are used to observe relationships between variables.\ni-scatter-line-chart is a component that creates a scatter line chart that based on the scatter chart with an additional line showing the correlation of the two variables.\n"},{"title":"i-bar-chart","file":"components/charts/BarChart/README.md","slug":"components/charts/BarChart/README","text":"A bar chart provides a way of showing data values represented as vertical bars. It is sometimes used to show trend data, and the comparison of multiple data sets side by side.\n"},{"title":"i-bar-stack-chart","file":"components/charts/BarStackChart/README.md","slug":"components/charts/BarStackChart/README","text":"A stacked bar chart is a graph that uses bars to show comparisons between categories of data, but with ability to break down and compare parts of a whole. Each bar in the chart represents a whole, and segments in the bar represent different parts or categories of that whole.\n"},{"title":"i-line-chart","file":"components/charts/LineChart/README.md","slug":"components/charts/LineChart/README","text":"A line chart provides a way of showing data values represented as a line. It is sometimes used to show trend data, and the comparison of multiple data sets side by side.\n"},{"title":"i-pie-chart","file":"components/charts/PieChart/README.md","slug":"components/charts/PieChart/README","text":"A pie chart is a circle divided into areas or slices. Each slice represents the count or percentage of the observations of a level for the variable. \n"},{"title":"i-scatter-chart","file":"components/charts/ScatterChart/README.md","slug":"components/charts/ScatterChart/README","text":"A scatter chart pairs of numerical data, with one variable on each axis, to look for a relationship between them. If the variables are correlated, the points will fall along a line or curve. The better the correlation, the tighter the points will hug the line. \n"},{"title":"i-scatter-line-chart","file":"components/charts/ScatterLineChart/README.md","slug":"components/charts/ScatterLineChart/README","text":"A scatter line chart is a special type of scatter chart that displays the data points along with a fitted line for a simple regression model. This graph allows you to evaluate how well the model fits the data.\n"},{"title":"Checkbox","file":"components/Checkbox/README.md","slug":"components/Checkbox/README","text":"A checkbox is used for selecting multiple values from several options. The i-checkbox component is used to define the checkbox and its associated values.  If only one checkbox is used, it is the same as using Switch to toggle between two states. The difference is that Switch will trigger the state change directly, but Checkbox just marks the state as changed and this needs to be submitted.\nInherited from Control\nTip: The property paddingLeft is inherited from Control\nTip: The properties id, paddingLeft are inherited from Control\n"},{"title":"CarouselSlider","file":"components/CarouselSlider/README.md","slug":"components/CarouselSlider/README","text":"A carousel slider component provides a scalable container for image or text information. It can be used to save space in the form of a revolving door. A carousel slider is composed with the components [i-carousel-slider].\nInherited from Control\n"},{"title":"CodeEditor","file":"components/CodeEditor/README.md","slug":"components/CodeEditor/README","text":"To call out the code editor for code editing.\n"},{"title":"ComboBox","file":"components/ComboBox/README.md","slug":"components/ComboBox/README","text":"A combo box is a text box with a list box attached that a user can select from. This type of control enables users to select a predefined value in a list in the text box portion of the control. Used i-combo-box to define the combo box.\nInherited from Control\nsingle | multiple | tags\nTip: The properties id, paddingTop, paddingLeft are inherited from Control\nTip: The properties id, paddingTop, paddingLeft are inherited from Control\n"},{"title":"Datepicker","file":"components/Datepicker/README.md","slug":"components/Datepicker/README","text":"To select or input a date, time or datetime by clicking the input box or select from a popup calendar.\nInherited from Control\ndate | dateTime | time;\n"},{"title":"Icon","file":"components/Icon/README.md","slug":"components/Icon/README","text":"To display an icon which in our icon library. User can define the style.\nInherited from Control\n"},{"title":"Iframe","file":"components/Iframe/README.md","slug":"components/Iframe/README","text":"An iFrame, also known as an Inline Frame, is an HTML document that is embedded inside another document on a web page, allowing you to include content from external sources. iFrame can be used for almost anything, from articles, to website homepages, to learning modules and beyond. The iFrame component describe the external source and the size of the iFrame.\nInherited from Control\n"},{"title":"Image","file":"components/Image/README.md","slug":"components/Image/README","text":"To display a previewable image.\nInherited from Control\n"},{"title":"Input","file":"components/Input/README.md","slug":"components/Input/README","text":"A basic widget for getting the user input is a text field. Keyboard and mouse can be used for providing or changing data.\nInherited from Control\ndate | time | dateTime | password | number | textarea\n"},{"title":"Label","file":"components/Label/README.md","slug":"components/Label/README","text":"It is used to create text labels to display.\nInherited from Control\n"},{"title":"Markdown","file":"components/Markdown/README.md","slug":"components/Markdown/README","text":"Use to define a menu\n"},{"title":"Menu","file":"components/Menu/README.md","slug":"components/Menu/README","text":"A menu provides navigation for the website or dApp.  A menu starts with the i-menu tag, and data to define the menu content.\nInherited from Control\nhorizontal | vertical | inline\n"},{"title":"Modal","file":"components/Modal/README.md","slug":"components/Modal/README","text":"A modal is a dialog box/popup window that is displayed on top of the current page. It also can use to create a drop down menu.\nInherited from Container\ncenter | bottom | bottomLeft | bottomRight | top | topLeft | topRight | rightTop\n"},{"title":"Module","file":"components/Module/README.md","slug":"components/Module/README","text":"Use to define module&#39;s caption.\n"},{"title":"Pagination","file":"components/Pagination/README.md","slug":"components/Pagination/README","text":"Use for dividing a long list into several pages, only one page will be loaded and displayed at a time for shortening user&#39;s load/render time.\nInherited from Control\n"},{"title":"Progress","file":"components/Progress/README.md","slug":"components/Progress/README","text":"It use to represents the completion progress of a task.\nInherited from Control\nline | circle\n"},{"title":"Radio","file":"components/Radio/README.md","slug":"components/Radio/README","text":"Use as grouping radio buttons for users to select at most one radio button from a set. Checking one radio button that belongs to a radio group unchecks any previous checked radio button within the same group. A radio group starts with the i-radio-group tag, and use radioItems to define the items.\nInherited from Control\n"},{"title":"Range","file":"components/Range/README.md","slug":"components/Range/README","text":"Use as range slider for users to select from a range of values by moving the along a slider.\nInherited from Control\n"},{"title":"Switch","file":"components/Switch/README.md","slug":"components/Switch/README","text":"Use switch for switching between on-off state or any two states when you toggle it.\nInherited from Control\n"},{"title":"Table","file":"components/Table/README.md","slug":"components/Table/README","text":"To display a collection of structured data where data can be sorted, searched, paginated, and filtered.\nInherited from Control\n"},{"title":"Tabs","file":"components/Tabs/README.md","slug":"components/Tabs/README","text":"Use to display information by switching to different views. A tabs starts with the i-tabs tag. Each tabs item starts with the i-tab tag.\n"},{"title":"i-tabs","file":"components/Tabs/iTabs/README.md","slug":"components/Tabs/iTabs/README","text":"Inherited from Container\nhorizontal | vertical\n"},{"title":"i-tab","file":"components/Tabs/iTab/README.md","slug":"components/Tabs/iTab/README","text":"Inherited from Container\n"},{"title":"TreeView","file":"components/TreeView/README.md","slug":"components/TreeView/README","text":"Use to present information in a tree structure. A way to display information with hierarchical relationship such as organization hierarchies, directories. You can also expand, collapse, and select a tree node within a Tree.There are two comnponents [i-tree-view] to create a TreeView.\nInherited from Control\n"},{"title":"Upload","file":"components/Upload/README.md","slug":"components/Upload/README","text":"Use for uploading one or more information for publishing such as (image, video, text, web page, etc.) to server via web page or upload tool, with uploading process, drag and drop upload features.\nInherited from Control\n"}]